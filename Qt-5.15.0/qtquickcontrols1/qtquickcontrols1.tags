<?xml version="1.0" encoding="UTF-8"?>
<tagfile>
    <compound kind="class">
        <name>QtQuick.Controls.AbstractCheckable</name>
        <filename>qml-qtquick-controls-abstractcheckable.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>clicked</name>
            <anchorfile>qml-qtquick-controls-abstractcheckable.html</anchorfile>
            <anchor>clicked-signal</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Action</name>
        <filename>qml-qtquick-controls-action.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>triggered</name>
            <anchorfile>qml-qtquick-controls-action.html</anchorfile>
            <anchor>triggered-signal</anchor>
            <arglist>( source)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>trigger</name>
            <anchorfile>qml-qtquick-controls-action.html</anchorfile>
            <anchor>trigger-method</anchor>
            <arglist>( source)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>toggled</name>
            <anchorfile>qml-qtquick-controls-action.html</anchorfile>
            <anchor>toggled-signal</anchor>
            <arglist>( checked)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.ApplicationWindow</name>
        <filename>qml-qtquick-controls-applicationwindow.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.ApplicationWindowStyle</name>
        <filename>qml-qtquick-controls-styles-applicationwindowstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.BasicButton</name>
        <filename>qml-basicbutton.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>clicked</name>
            <anchorfile>qml-basicbutton.html</anchorfile>
            <anchor>clicked-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>accessiblePressAction</name>
            <anchorfile>qml-basicbutton.html</anchorfile>
            <anchor>accessiblePressAction-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.BasicTableView</name>
        <filename>qml-basictableview.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>TableViewColumn</type>
            <name>addColumn</name>
            <anchorfile>qml-basictableview.html</anchorfile>
            <anchor>addColumn-method</anchor>
            <arglist>(object column)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>TableViewColumn</type>
            <name>insertColumn</name>
            <anchorfile>qml-basictableview.html</anchorfile>
            <anchor>insertColumn-method</anchor>
            <arglist>(int index, object column)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeColumn</name>
            <anchorfile>qml-basictableview.html</anchorfile>
            <anchor>removeColumn-method</anchor>
            <arglist>(int index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>moveColumn</name>
            <anchorfile>qml-basictableview.html</anchorfile>
            <anchor>moveColumn-method</anchor>
            <arglist>(int from, int to)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>TableViewColumn</type>
            <name>getColumn</name>
            <anchorfile>qml-basictableview.html</anchorfile>
            <anchor>getColumn-method</anchor>
            <arglist>(int index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>resizeColumnsToContents</name>
            <anchorfile>qml-basictableview.html</anchorfile>
            <anchor>resizeColumnsToContents-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.BasicTableViewStyle</name>
        <filename>qml-qtquick-controls-styles-basictableviewstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.BusyIndicator</name>
        <filename>qml-qtquick-controls-busyindicator.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.BusyIndicatorStyle</name>
        <filename>qml-qtquick-controls-styles-busyindicatorstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Button</name>
        <filename>qml-qtquick-controls-button.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.ButtonStyle</name>
        <filename>qml-qtquick-controls-styles-buttonstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Calendar</name>
        <filename>qml-qtquick-controls-calendar.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>hovered</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>hovered-signal</anchor>
            <arglist>(date )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>pressed</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>pressed-signal</anchor>
            <arglist>(date )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>released</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>released-signal</anchor>
            <arglist>(date )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>clicked</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>clicked-signal</anchor>
            <arglist>(date )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>doubleClicked</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>doubleClicked-signal</anchor>
            <arglist>(date )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>pressAndHold</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>pressAndHold-signal</anchor>
            <arglist>(date )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>showPreviousMonth</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>showPreviousMonth-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>showNextMonth</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>showNextMonth-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>showPreviousYear</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>showPreviousYear-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>showNextYear</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>showNextYear-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectPreviousMonth</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>__selectPreviousMonth-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectNextMonth</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>__selectNextMonth-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectPreviousWeek</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>__selectPreviousWeek-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectNextWeek</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>__selectNextWeek-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectFirstDayOfMonth</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>__selectFirstDayOfMonth-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectLastDayOfMonth</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>__selectLastDayOfMonth-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectPreviousDay</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>__selectPreviousDay-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectNextDay</name>
            <anchorfile>qml-qtquick-controls-calendar.html</anchorfile>
            <anchor>__selectNextDay-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.CalendarStyle</name>
        <filename>qml-qtquick-controls-styles-calendarstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.CheckBox</name>
        <filename>qml-qtquick-controls-checkbox.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__cycleCheckBoxStates</name>
            <anchorfile>qml-qtquick-controls-checkbox.html</anchorfile>
            <anchor>__cycleCheckBoxStates-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.CheckBoxStyle</name>
        <filename>qml-qtquick-controls-styles-checkboxstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.CircularGaugeStyle</name>
        <filename>qml-qtquick-controls-styles-circulargaugestyle.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>real</type>
            <name>valueToAngle</name>
            <anchorfile>qml-qtquick-controls-styles-circulargaugestyle.html</anchorfile>
            <anchor>valueToAngle-method</anchor>
            <arglist>(real value)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.ComboBox</name>
        <filename>qml-qtquick-controls-combobox.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>string</type>
            <name>textAt</name>
            <anchorfile>qml-qtquick-controls-combobox.html</anchorfile>
            <anchor>textAt-method</anchor>
            <arglist>(int index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>find</name>
            <anchorfile>qml-qtquick-controls-combobox.html</anchorfile>
            <anchor>find-method</anchor>
            <arglist>(string text)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>accepted</name>
            <anchorfile>qml-qtquick-controls-combobox.html</anchorfile>
            <anchor>accepted-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>activated</name>
            <anchorfile>qml-qtquick-controls-combobox.html</anchorfile>
            <anchor>activated-signal</anchor>
            <arglist>(int )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectAll</name>
            <anchorfile>qml-qtquick-controls-combobox.html</anchorfile>
            <anchor>selectAll-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectPrevItem</name>
            <anchorfile>qml-qtquick-controls-combobox.html</anchorfile>
            <anchor>__selectPrevItem-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__selectNextItem</name>
            <anchorfile>qml-qtquick-controls-combobox.html</anchorfile>
            <anchor>__selectNextItem-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.ComboBoxStyle</name>
        <filename>qml-qtquick-controls-styles-comboboxstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.Control</name>
        <filename>qml-control.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.DelayButtonStyle</name>
        <filename>qml-qtquick-controls-styles-delaybuttonstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.DialStyle</name>
        <filename>qml-qtquick-controls-styles-dialstyle.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>real</type>
            <name>valueToAngle</name>
            <anchorfile>qml-qtquick-controls-styles-dialstyle.html</anchorfile>
            <anchor>valueToAngle-method</anchor>
            <arglist>(real value)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.ExclusiveGroup</name>
        <filename>qml-qtquick-controls-exclusivegroup.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>bindCheckable</name>
            <anchorfile>qml-qtquick-controls-exclusivegroup.html</anchorfile>
            <anchor>bindCheckable-method</anchor>
            <arglist>( object)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>unbindCheckable</name>
            <anchorfile>qml-qtquick-controls-exclusivegroup.html</anchorfile>
            <anchor>unbindCheckable-method</anchor>
            <arglist>( object)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.FocusFrame</name>
        <filename>qml-focusframe.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.FocusFrameStyle</name>
        <filename>qml-qtquick-controls-styles-focusframestyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.GaugeStyle</name>
        <filename>qml-qtquick-controls-styles-gaugestyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.GroupBox</name>
        <filename>qml-qtquick-controls-groupbox.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.GroupBoxStyle</name>
        <filename>qml-qtquick-controls-styles-groupboxstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Label</name>
        <filename>qml-qtquick-controls-label.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Menu</name>
        <filename>qml-qtquick-controls-menu.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>addMenu</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>addMenu-method</anchor>
            <arglist>( )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>insertMenu</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>insertMenu-method</anchor>
            <arglist>( ,  )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>popup</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>popup-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>MenuItem</type>
            <name>addItem</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>addItem-method</anchor>
            <arglist>( text)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>MenuItem</type>
            <name>insertItem</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>insertItem-method</anchor>
            <arglist>( before,  string title)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>addSeparator</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>addSeparator-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>insertSeparator</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>insertSeparator-method</anchor>
            <arglist>( before)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Menu</type>
            <name>addMenu</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>addMenu-method</anchor>
            <arglist>( title)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>MenuItem</type>
            <name>insertMenu</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>insertMenu-method</anchor>
            <arglist>( before,  string title)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>insertItem</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>insertItem-method</anchor>
            <arglist>( before,  object item)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeItem</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>removeItem-method</anchor>
            <arglist>( item)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>aboutToShow</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>aboutToShow-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>aboutToHide</name>
            <anchorfile>qml-qtquick-controls-menu.html</anchorfile>
            <anchor>aboutToHide-signal</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.MenuBar</name>
        <filename>qml-qtquick-controls-menubar.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.MenuBarStyle</name>
        <filename>qml-qtquick-controls-styles-menubarstyle.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>string</type>
            <name>formatMnemonic</name>
            <anchorfile>qml-qtquick-controls-styles-menubarstyle.html</anchorfile>
            <anchor>formatMnemonic-method</anchor>
            <arglist>(string text, bool underline)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.MenuItem</name>
        <filename>qml-qtquick-controls-menuitem.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>triggered</name>
            <anchorfile>qml-qtquick-controls-menuitem.html</anchorfile>
            <anchor>triggered-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>trigger</name>
            <anchorfile>qml-qtquick-controls-menuitem.html</anchorfile>
            <anchor>trigger-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>toggled</name>
            <anchorfile>qml-qtquick-controls-menuitem.html</anchorfile>
            <anchor>toggled-signal</anchor>
            <arglist>( checked)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.MenuSeparator</name>
        <filename>qml-qtquick-controls-menuseparator.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.MenuStyle</name>
        <filename>qml-qtquick-controls-styles-menustyle.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>string</type>
            <name>formatMnemonic</name>
            <anchorfile>qml-qtquick-controls-styles-menustyle.html</anchorfile>
            <anchor>formatMnemonic-method</anchor>
            <arglist>(string text, bool underline)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.ModalPopupBehavior</name>
        <filename>qml-modalpopupbehavior.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.PieMenuStyle</name>
        <filename>qml-qtquick-controls-styles-piemenustyle.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>real</type>
            <name>sectionStartAngle</name>
            <anchorfile>qml-qtquick-controls-styles-piemenustyle.html</anchorfile>
            <anchor>sectionStartAngle-method</anchor>
            <arglist>(int itemIndex)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>real</type>
            <name>sectionCenterAngle</name>
            <anchorfile>qml-qtquick-controls-styles-piemenustyle.html</anchorfile>
            <anchor>sectionCenterAngle-method</anchor>
            <arglist>(int itemIndex)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>real</type>
            <name>sectionEndAngle</name>
            <anchorfile>qml-qtquick-controls-styles-piemenustyle.html</anchorfile>
            <anchor>sectionEndAngle-method</anchor>
            <arglist>(int itemIndex)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.ProgressBar</name>
        <filename>qml-qtquick-controls-progressbar.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>setValue</name>
            <anchorfile>qml-qtquick-controls-progressbar.html</anchorfile>
            <anchor>setValue-method</anchor>
            <arglist>( )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.ProgressBarStyle</name>
        <filename>qml-qtquick-controls-styles-progressbarstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.RadioButton</name>
        <filename>qml-qtquick-controls-radiobutton.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.RadioButtonStyle</name>
        <filename>qml-qtquick-controls-styles-radiobuttonstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.ScrollBar</name>
        <filename>qml-scrollbar.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.ScrollView</name>
        <filename>qml-qtquick-controls-scrollview.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.ScrollViewHelper</name>
        <filename>qml-scrollviewhelper.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.ScrollViewStyle</name>
        <filename>qml-qtquick-controls-styles-scrollviewstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Slider</name>
        <filename>qml-qtquick-controls-slider.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>accessibleIncreaseAction</name>
            <anchorfile>qml-qtquick-controls-slider.html</anchorfile>
            <anchor>accessibleIncreaseAction-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>accessibleDecreaseAction</name>
            <anchorfile>qml-qtquick-controls-slider.html</anchorfile>
            <anchor>accessibleDecreaseAction-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.SliderStyle</name>
        <filename>qml-qtquick-controls-styles-sliderstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.SpinBox</name>
        <filename>qml-qtquick-controls-spinbox.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>editingFinished</name>
            <anchorfile>qml-qtquick-controls-spinbox.html</anchorfile>
            <anchor>editingFinished-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__increment</name>
            <anchorfile>qml-qtquick-controls-spinbox.html</anchorfile>
            <anchor>__increment-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__decrement</name>
            <anchorfile>qml-qtquick-controls-spinbox.html</anchorfile>
            <anchor>__decrement-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.SpinBoxStyle</name>
        <filename>qml-qtquick-controls-styles-spinboxstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.SplitView</name>
        <filename>qml-qtquick-controls-splitview.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>addItem</name>
            <anchorfile>qml-qtquick-controls-splitview.html</anchorfile>
            <anchor>addItem-method</anchor>
            <arglist>(Item item)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeItem</name>
            <anchorfile>qml-qtquick-controls-splitview.html</anchorfile>
            <anchor>removeItem-method</anchor>
            <arglist>(Item item)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Stack</name>
        <filename>qml-qtquick-controls-stack.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.StackView</name>
        <filename>qml-qtquick-controls-stackview.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Item</type>
            <name>push</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>push-method</anchor>
            <arglist>(Item item)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Item</type>
            <name>pop</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>pop-method</anchor>
            <arglist>(Item item)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clear</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>clear-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Item</type>
            <name>find</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>find-method</anchor>
            <arglist>( function, bool onlySearchLoadedItems)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Item</type>
            <name>get</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>get-method</anchor>
            <arglist>(int index, bool dontLoad)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>completeTransition</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>completeTransition-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>replace</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>replace-method</anchor>
            <arglist>( ,  ,  )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__recursionGuard</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>__recursionGuard-method</anchor>
            <arglist>( )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__loadElement</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>__loadElement-method</anchor>
            <arglist>( )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__resolveComponent</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>__resolveComponent-method</anchor>
            <arglist>( ,  )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__cleanup</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>__cleanup-method</anchor>
            <arglist>( )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__setStatus</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>__setStatus-method</anchor>
            <arglist>( ,  )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__performTransition</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>__performTransition-method</anchor>
            <arglist>( )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>animationFinished</name>
            <anchorfile>qml-qtquick-controls-stackview.html</anchorfile>
            <anchor>animationFinished-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.StackViewDelegate</name>
        <filename>qml-qtquick-controls-stackviewdelegate.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Transition</type>
            <name>getTransition</name>
            <anchorfile>qml-qtquick-controls-stackviewdelegate.html</anchorfile>
            <anchor>getTransition-method</anchor>
            <arglist>( properties)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>transitionFinished</name>
            <anchorfile>qml-qtquick-controls-stackviewdelegate.html</anchorfile>
            <anchor>transitionFinished-method</anchor>
            <arglist>( properties)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.StackViewSlideDelegate</name>
        <filename>qml-stackviewslidedelegate.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.StatusBar</name>
        <filename>qml-qtquick-controls-statusbar.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.StatusBarStyle</name>
        <filename>qml-qtquick-controls-styles-statusbarstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.StatusIndicatorStyle</name>
        <filename>qml-qtquick-controls-styles-statusindicatorstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.Style</name>
        <filename>qml-style.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Switch</name>
        <filename>qml-qtquick-controls-switch.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>clicked</name>
            <anchorfile>qml-qtquick-controls-switch.html</anchorfile>
            <anchor>clicked-signal</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.SwitchStyle</name>
        <filename>qml-qtquick-controls-styles-switchstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Tab</name>
        <filename>qml-qtquick-controls-tab.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.TabBar</name>
        <filename>qml-tabbar.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__isAncestorOf</name>
            <anchorfile>qml-tabbar.html</anchorfile>
            <anchor>__isAncestorOf-method</anchor>
            <arglist>( ,  )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.TabView</name>
        <filename>qml-qtquick-controls-tabview.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Tab</type>
            <name>addTab</name>
            <anchorfile>qml-qtquick-controls-tabview.html</anchorfile>
            <anchor>addTab-method</anchor>
            <arglist>(string title, Component component)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Tab</type>
            <name>insertTab</name>
            <anchorfile>qml-qtquick-controls-tabview.html</anchorfile>
            <anchor>insertTab-method</anchor>
            <arglist>(int index, string title, Component component)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeTab</name>
            <anchorfile>qml-qtquick-controls-tabview.html</anchorfile>
            <anchor>removeTab-method</anchor>
            <arglist>(int index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>moveTab</name>
            <anchorfile>qml-qtquick-controls-tabview.html</anchorfile>
            <anchor>moveTab-method</anchor>
            <arglist>(int from, int to)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Tab</type>
            <name>getTab</name>
            <anchorfile>qml-qtquick-controls-tabview.html</anchorfile>
            <anchor>getTab-method</anchor>
            <arglist>(int index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>__willRemoveIndex</name>
            <anchorfile>qml-qtquick-controls-tabview.html</anchorfile>
            <anchor>__willRemoveIndex-method</anchor>
            <arglist>( )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.TabViewStyle</name>
        <filename>qml-qtquick-controls-styles-tabviewstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.TableView</name>
        <filename>qml-qtquick-controls-tableview.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>activated</name>
            <anchorfile>qml-qtquick-controls-tableview.html</anchorfile>
            <anchor>activated-signal</anchor>
            <arglist>( row)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>clicked</name>
            <anchorfile>qml-qtquick-controls-tableview.html</anchorfile>
            <anchor>clicked-signal</anchor>
            <arglist>( row)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>doubleClicked</name>
            <anchorfile>qml-qtquick-controls-tableview.html</anchorfile>
            <anchor>doubleClicked-signal</anchor>
            <arglist>( row)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>pressAndHold</name>
            <anchorfile>qml-qtquick-controls-tableview.html</anchorfile>
            <anchor>pressAndHold-signal</anchor>
            <arglist>( row)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>positionViewAtRow</name>
            <anchorfile>qml-qtquick-controls-tableview.html</anchorfile>
            <anchor>positionViewAtRow-method</anchor>
            <arglist>( int row,  PositionMode mode )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>rowAt</name>
            <anchorfile>qml-qtquick-controls-tableview.html</anchorfile>
            <anchor>rowAt-method</anchor>
            <arglist>( int x,  int y )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.TableViewColumn</name>
        <filename>qml-qtquick-controls-tableviewcolumn.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>resizeToContents</name>
            <anchorfile>qml-qtquick-controls-tableviewcolumn.html</anchorfile>
            <anchor>resizeToContents-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.TableViewItemDelegateLoader</name>
        <filename>qml-tableviewitemdelegateloader.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.TableViewStyle</name>
        <filename>qml-qtquick-controls-styles-tableviewstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.TextArea</name>
        <filename>qml-qtquick-controls-textarea.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>linkActivated</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>linkActivated-signal</anchor>
            <arglist>(string )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>linkHovered</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>linkHovered-signal</anchor>
            <arglist>(string )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>editingFinished</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>editingFinished-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>append</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>append-method</anchor>
            <arglist>(string text)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>copy</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>copy-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cut</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>cut-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>deselect</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>deselect-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>string</type>
            <name>getFormattedText</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>getFormattedText-method</anchor>
            <arglist>(int start, int end)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>string</type>
            <name>getText</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>getText-method</anchor>
            <arglist>(int start, int end)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>insert</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>insert-method</anchor>
            <arglist>(int position, string text)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isRightToLeft</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>isRightToLeft-method</anchor>
            <arglist>(int start, int end)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>moveCursorSelection</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>moveCursorSelection-method</anchor>
            <arglist>(int position, SelectionMode mode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>paste</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>paste-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>positionAt</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>positionAt-method</anchor>
            <arglist>(int x, int y)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>rectangle</type>
            <name>positionToRectangle</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>positionToRectangle-method</anchor>
            <arglist>( position)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>redo</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>redo-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>string</type>
            <name>remove</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>remove-method</anchor>
            <arglist>(int start, int end)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>select</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>select-method</anchor>
            <arglist>(int start, int end)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectAll</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>selectAll-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectWord</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>selectWord-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>undo</name>
            <anchorfile>qml-qtquick-controls-textarea.html</anchorfile>
            <anchor>undo-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.TextAreaStyle</name>
        <filename>qml-qtquick-controls-styles-textareastyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.TextField</name>
        <filename>qml-qtquick-controls-textfield.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>accepted</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>accepted-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>editingFinished</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>editingFinished-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>copy</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>copy-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cut</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>cut-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>deselect</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>deselect-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>string</type>
            <name>getText</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>getText-method</anchor>
            <arglist>(int start, int end)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>insert</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>insert-method</anchor>
            <arglist>(int position, string text)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isRightToLeft</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>isRightToLeft-method</anchor>
            <arglist>(int start, int end)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>paste</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>paste-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>redo</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>redo-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>remove</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>remove-method</anchor>
            <arglist>(int start, int end)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>select</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>select-method</anchor>
            <arglist>(int start, int end)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectAll</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>selectAll-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectWord</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>selectWord-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>undo</name>
            <anchorfile>qml-qtquick-controls-textfield.html</anchorfile>
            <anchor>undo-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.TextFieldStyle</name>
        <filename>qml-qtquick-controls-styles-textfieldstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.ToggleButtonStyle</name>
        <filename>qml-qtquick-controls-styles-togglebuttonstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.ToolBar</name>
        <filename>qml-qtquick-controls-toolbar.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.ToolBarStyle</name>
        <filename>qml-qtquick-controls-styles-toolbarstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.ToolButton</name>
        <filename>qml-qtquick-controls-toolbutton.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.ToolButtonStyle</name>
        <filename>qml-qtquick-controls-styles-toolbuttonstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.TreeView</name>
        <filename>qml-qtquick-controls-treeview.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>activated</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>activated-signal</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>clicked</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>clicked-signal</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>doubleClicked</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>doubleClicked-signal</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>pressAndHold</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>pressAndHold-signal</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>expanded</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>expanded-signal</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>collapsed</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>collapsed-signal</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isExpanded</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>isExpanded-method</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>collapse</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>collapse-method</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>expand</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>expand-method</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QModelIndex</type>
            <name>indexAt</name>
            <anchorfile>qml-qtquick-controls-treeview.html</anchorfile>
            <anchor>indexAt-method</anchor>
            <arglist>( int x,  int y )</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Private.TreeViewItemDelegateLoader</name>
        <filename>qml-treeviewitemdelegateloader.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.TreeViewStyle</name>
        <filename>qml-qtquick-controls-styles-treeviewstyle.html</filename>
    </compound>
    <compound kind="class">
        <name>QtQuick.Controls.Styles.TumblerStyle</name>
        <filename>qml-qtquick-controls-styles-tumblerstyle.html</filename>
    </compound>
</tagfile>
