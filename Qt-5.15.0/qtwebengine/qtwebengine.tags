<?xml version="1.0" encoding="UTF-8"?>
<tagfile>
    <compound kind="class">
        <name>QtWebEngine.AuthenticationDialogRequest</name>
        <filename>qml-qtwebengine-authenticationdialogrequest.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dialogAccept</name>
            <anchorfile>qml-qtwebengine-authenticationdialogrequest.html</anchorfile>
            <anchor>dialogAccept-method</anchor>
            <arglist>( username,  string password)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dialogReject</name>
            <anchorfile>qml-qtwebengine-authenticationdialogrequest.html</anchorfile>
            <anchor>dialogReject-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.ColorDialogRequest</name>
        <filename>qml-qtwebengine-colordialogrequest.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dialogAccept</name>
            <anchorfile>qml-qtwebengine-colordialogrequest.html</anchorfile>
            <anchor>dialogAccept-method</anchor>
            <arglist>( color)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dialogReject</name>
            <anchorfile>qml-qtwebengine-colordialogrequest.html</anchorfile>
            <anchor>dialogReject-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.ContextMenuRequest</name>
        <filename>qml-qtwebengine-contextmenurequest.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.FileDialogRequest</name>
        <filename>qml-qtwebengine-filedialogrequest.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dialogAccept</name>
            <anchorfile>qml-qtwebengine-filedialogrequest.html</anchorfile>
            <anchor>dialogAccept-method</anchor>
            <arglist>( files)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dialogReject</name>
            <anchorfile>qml-qtwebengine-filedialogrequest.html</anchorfile>
            <anchor>dialogReject-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.FindTextResult</name>
        <filename>qml-qtwebengine-findtextresult.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.FormValidationMessageRequest</name>
        <filename>qml-qtwebengine-formvalidationmessagerequest.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.FullScreenRequest</name>
        <filename>qml-qtwebengine-fullscreenrequest.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>accept</name>
            <anchorfile>qml-qtwebengine-fullscreenrequest.html</anchorfile>
            <anchor>accept-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reject</name>
            <anchorfile>qml-qtwebengine-fullscreenrequest.html</anchorfile>
            <anchor>reject-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.JavaScriptDialogRequest</name>
        <filename>qml-qtwebengine-javascriptdialogrequest.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dialogAccept</name>
            <anchorfile>qml-qtwebengine-javascriptdialogrequest.html</anchorfile>
            <anchor>dialogAccept-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dialogAccept</name>
            <anchorfile>qml-qtwebengine-javascriptdialogrequest.html</anchorfile>
            <anchor>dialogAccept-method</anchor>
            <arglist>( text)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>dialogReject</name>
            <anchorfile>qml-qtwebengine-javascriptdialogrequest.html</anchorfile>
            <anchor>dialogReject-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQuickWebEngineProfile</name>
        <filename>qquickwebengineprofile.html</filename>
        <base>QObject</base>
        <member kind="property" type="QString">
            <name>storageName</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>storageName-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>offTheRecord</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>offTheRecord-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>persistentStoragePath</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>persistentStoragePath-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>cachePath</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>cachePath-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>httpUserAgent</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpUserAgent-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="HttpCacheType">
            <name>httpCacheType</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpCacheType-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>httpAcceptLanguage</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpAcceptLanguage-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="PersistentCookiesPolicy">
            <name>persistentCookiesPolicy</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>persistentCookiesPolicy-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>httpCacheMaximumSize</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpCacheMaximumSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QStringList">
            <name>spellCheckLanguages</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>spellCheckLanguages-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>spellCheckEnabled</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>spellCheckEnabled-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QQmlListProperty&lt;QQuickWebEngineScript&gt;">
            <name>userScripts</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>userScripts-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>useForGlobalCertificateVerification</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>useForGlobalCertificateVerification-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>downloadPath</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>downloadPath-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QQuickWebEngineProfile</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>QQuickWebEngineProfile</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="enumeration">
            <name>HttpCacheType</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>HttpCacheType-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>MemoryHttpCache</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>HttpCacheType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DiskHttpCache</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>HttpCacheType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NoCache</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>HttpCacheType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>PersistentCookiesPolicy</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>PersistentCookiesPolicy-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>NoPersistentCookies</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>PersistentCookiesPolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AllowPersistentCookies</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>PersistentCookiesPolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ForcePersistentCookies</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>PersistentCookiesPolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>storageName</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>storageName-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setStorageName</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>storageName-prop</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isOffTheRecord</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>offTheRecord-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setOffTheRecord</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>offTheRecord-prop</anchor>
            <arglist>(bool offTheRecord)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>persistentStoragePath</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>persistentStoragePath-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPersistentStoragePath</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>persistentStoragePath-prop</anchor>
            <arglist>(const QString &amp;path)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>cachePath</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>cachePath-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCachePath</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>cachePath-prop</anchor>
            <arglist>(const QString &amp;path)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>httpUserAgent</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpUserAgent-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHttpUserAgent</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpUserAgent-prop</anchor>
            <arglist>(const QString &amp;userAgent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQuickWebEngineProfile::HttpCacheType</type>
            <name>httpCacheType</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpCacheType-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHttpCacheType</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpCacheType-prop</anchor>
            <arglist>(QQuickWebEngineProfile::HttpCacheType )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQuickWebEngineProfile::PersistentCookiesPolicy</type>
            <name>persistentCookiesPolicy</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>persistentCookiesPolicy-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPersistentCookiesPolicy</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>persistentCookiesPolicy-prop</anchor>
            <arglist>(QQuickWebEngineProfile::PersistentCookiesPolicy )</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>httpCacheMaximumSize</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpCacheMaximumSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHttpCacheMaximumSize</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpCacheMaximumSize-prop</anchor>
            <arglist>(int maxSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>httpAcceptLanguage</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpAcceptLanguage-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHttpAcceptLanguage</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpAcceptLanguage-prop</anchor>
            <arglist>(const QString &amp;httpAcceptLanguage)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineCookieStore *</type>
            <name>cookieStore</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>cookieStore</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRequestInterceptor</name>
            <anchorfile>qquickwebengineprofile-obsolete.html</anchorfile>
            <anchor>setRequestInterceptor</anchor>
            <arglist>(QWebEngineUrlRequestInterceptor *interceptor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUrlRequestInterceptor</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>setUrlRequestInterceptor</anchor>
            <arglist>(QWebEngineUrlRequestInterceptor *interceptor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const QWebEngineUrlSchemeHandler *</type>
            <name>urlSchemeHandler</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>urlSchemeHandler</anchor>
            <arglist>(const QByteArray &amp;scheme) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>installUrlSchemeHandler</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>installUrlSchemeHandler</anchor>
            <arglist>(const QByteArray &amp;scheme, QWebEngineUrlSchemeHandler *handler)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeUrlScheme</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>removeUrlScheme</anchor>
            <arglist>(const QByteArray &amp;scheme)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeUrlSchemeHandler</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>removeUrlSchemeHandler</anchor>
            <arglist>(QWebEngineUrlSchemeHandler *handler)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeAllUrlSchemeHandlers</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>removeAllUrlSchemeHandlers</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearHttpCache</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>clearHttpCache</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSpellCheckLanguages</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>spellCheckLanguages-prop</anchor>
            <arglist>(const QStringList &amp;languages)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QStringList</type>
            <name>spellCheckLanguages</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>spellCheckLanguages</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSpellCheckEnabled</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>spellCheckEnabled-prop</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isSpellCheckEnabled</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>spellCheckEnabled-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQmlListProperty&lt;QQuickWebEngineScript&gt;</type>
            <name>userScripts</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>userScripts-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUseForGlobalCertificateVerification</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>useForGlobalCertificateVerification-prop</anchor>
            <arglist>(bool b)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsedForGlobalCertificateVerification</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>useForGlobalCertificateVerification-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>downloadPath</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>downloadPath-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDownloadPath</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>downloadPath-prop</anchor>
            <arglist>(const QString &amp;path)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineClientCertificateStore *</type>
            <name>clientCertificateStore</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>clientCertificateStore</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QQuickWebEngineProfile *</type>
            <name>defaultProfile</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>defaultProfile</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>storageNameChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>storageName-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>offTheRecordChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>offTheRecord-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>persistentStoragePathChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>persistentStoragePath-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cachePathChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>cachePath-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>httpUserAgentChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpUserAgent-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>httpCacheTypeChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpCacheType-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>persistentCookiesPolicyChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>persistentCookiesPolicy-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>httpCacheMaximumSizeChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpCacheMaximumSize-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>httpAcceptLanguageChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>httpAcceptLanguage-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>spellCheckLanguagesChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>spellCheckLanguages-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>spellCheckEnabledChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>spellCheckEnabled-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>useForGlobalCertificateVerificationChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>useForGlobalCertificateVerification-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>downloadPathChanged</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>downloadPath-prop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>downloadRequested</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>downloadRequested</anchor>
            <arglist>(QQuickWebEngineDownloadItem *download)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>downloadFinished</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>downloadFinished</anchor>
            <arglist>(QQuickWebEngineDownloadItem *download)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>presentNotification</name>
            <anchorfile>qquickwebengineprofile.html</anchorfile>
            <anchor>presentNotification</anchor>
            <arglist>(QWebEngineNotification *notification)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QQuickWebEngineScript</name>
        <filename>qquickwebenginescript.html</filename>
        <base>QObject</base>
        <member kind="property" type="QString">
            <name>name</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QUrl">
            <name>sourceUrl</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>sourceUrl-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>sourceCode</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>sourceCode-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="InjectionPoint">
            <name>injectionPoint</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>injectionPoint-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="ScriptWorldId">
            <name>worldId</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>worldId-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>runOnSubframes</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>runOnSubframes-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>InjectionPoint</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>InjectionPoint-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>Deferred</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>InjectionPoint-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DocumentReady</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>InjectionPoint-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DocumentCreation</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>InjectionPoint-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>ScriptWorldId</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>ScriptWorldId-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>MainWorld</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>ScriptWorldId-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ApplicationWorld</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>ScriptWorldId-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>UserWorld</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>ScriptWorldId-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QQuickWebEngineScript</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>QQuickWebEngineScript</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>toString</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>toString</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>sourceUrl</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>sourceUrl-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>sourceCode</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>sourceCode-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQuickWebEngineScript::InjectionPoint</type>
            <name>injectionPoint</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>injectionPoint-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QQuickWebEngineScript::ScriptWorldId</type>
            <name>worldId</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>worldId-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>runOnSubframes</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>runOnSubframes-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setName</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSourceUrl</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>sourceUrl-prop</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSourceCode</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>sourceCode-prop</anchor>
            <arglist>(const QString &amp;code)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInjectionPoint</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>injectionPoint-prop</anchor>
            <arglist>(QQuickWebEngineScript::InjectionPoint injectionPoint)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWorldId</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>worldId-prop</anchor>
            <arglist>(QQuickWebEngineScript::ScriptWorldId scriptWorldId)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRunOnSubframes</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>runOnSubframes-prop</anchor>
            <arglist>(bool on)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>nameChanged</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>name-prop</anchor>
            <arglist>(const QString &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sourceUrlChanged</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>sourceUrl-prop</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>sourceCodeChanged</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>sourceCode-prop</anchor>
            <arglist>(const QString &amp;code)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>injectionPointChanged</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>injectionPoint-prop</anchor>
            <arglist>(QQuickWebEngineScript::InjectionPoint injectionPoint)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>worldIdChanged</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>worldId-prop</anchor>
            <arglist>(QQuickWebEngineScript::ScriptWorldId scriptWorldId)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>runOnSubframesChanged</name>
            <anchorfile>qquickwebenginescript.html</anchorfile>
            <anchor>runOnSubframes-prop</anchor>
            <arglist>(bool on)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineCertificateError</name>
        <filename>qwebenginecertificateerror.html</filename>
        <member kind="enumeration">
            <name>Error</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>SslPinnedKeyNotInCertificateChain</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateCommonNameInvalid</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateDateInvalid</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateAuthorityInvalid</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateContainsErrors</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateNoRevocationMechanism</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateUnableToCheckRevocation</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateRevoked</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateInvalid</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateWeakSignatureAlgorithm</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateNonUniqueName</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateWeakKey</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateNameConstraintViolation</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateValidityTooLong</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateTransparencyRequired</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CertificateKnownInterceptionBlocked</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineCertificateError::Error</type>
            <name>error</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>error</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>url</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>url</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isOverridable</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>isOverridable</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>errorDescription</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>errorDescription</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>defer</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>defer</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>deferred</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>deferred</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rejectCertificate</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>rejectCertificate</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>ignoreCertificateError</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>ignoreCertificateError</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>answered</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>answered</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QSslCertificate&gt;</type>
            <name>certificateChain</name>
            <anchorfile>qwebenginecertificateerror.html</anchorfile>
            <anchor>certificateChain</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineClientCertificateSelection</name>
        <filename>qwebengineclientcertificateselection.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>host</name>
            <anchorfile>qwebengineclientcertificateselection.html</anchorfile>
            <anchor>host</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>select</name>
            <anchorfile>qwebengineclientcertificateselection.html</anchorfile>
            <anchor>select</anchor>
            <arglist>(const QSslCertificate &amp;certificate)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectNone</name>
            <anchorfile>qwebengineclientcertificateselection.html</anchorfile>
            <anchor>selectNone</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector&lt;QSslCertificate&gt;</type>
            <name>certificates</name>
            <anchorfile>qwebengineclientcertificateselection.html</anchorfile>
            <anchor>certificates</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineClientCertificateStore</name>
        <filename>qwebengineclientcertificatestore.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>add</name>
            <anchorfile>qwebengineclientcertificatestore.html</anchorfile>
            <anchor>add</anchor>
            <arglist>(const QSslCertificate &amp;certificate, const QSslKey &amp;privateKey)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector&lt;QSslCertificate&gt;</type>
            <name>certificates</name>
            <anchorfile>qwebengineclientcertificatestore.html</anchorfile>
            <anchor>certificates</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>remove</name>
            <anchorfile>qwebengineclientcertificatestore.html</anchorfile>
            <anchor>remove</anchor>
            <arglist>(const QSslCertificate &amp;certificate)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clear</name>
            <anchorfile>qwebengineclientcertificatestore.html</anchorfile>
            <anchor>clear</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineContextMenuData</name>
        <filename>qwebenginecontextmenudata.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineContextMenuData</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>QWebEngineContextMenuData</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineContextMenuData</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>QWebEngineContextMenuData-1</anchor>
            <arglist>(const QWebEngineContextMenuData &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineContextMenuData &amp;</type>
            <name>operator=</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QWebEngineContextMenuData &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QWebEngineContextMenuData</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>dtor.QWebEngineContextMenuData</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="enumeration">
            <name>MediaType</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaType-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>MediaTypeNone</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaTypeImage</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaTypeVideo</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaTypeAudio</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaTypeCanvas</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaTypeFile</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaTypePlugin</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>MediaFlag</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>MediaInError</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaPaused</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaMuted</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaLoop</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaCanSave</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaHasAudio</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaCanToggleControls</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaControls</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaCanPrint</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaCanRotate</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="QWebEngineContextMenuData::MediaFlag">
            <name>MediaFlags</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>MediaFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>EditFlag</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>CanUndo</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CanRedo</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CanCut</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CanCopy</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CanPaste</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CanDelete</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CanSelectAll</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CanTranslate</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CanEditRichly</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="QWebEngineContextMenuData::EditFlag">
            <name>EditFlags</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>EditFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isValid</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>isValid</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QPoint</type>
            <name>position</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>position</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>selectedText</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>selectedText</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>linkText</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>linkText</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>linkUrl</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>linkUrl</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>mediaUrl</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>mediaUrl</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineContextMenuData::MediaType</type>
            <name>mediaType</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>mediaType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isContentEditable</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>isContentEditable</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>misspelledWord</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>misspelledWord</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QStringList</type>
            <name>spellCheckerSuggestions</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>spellCheckerSuggestions</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineContextMenuData::MediaFlags</type>
            <name>mediaFlags</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>mediaFlags</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineContextMenuData::EditFlags</type>
            <name>editFlags</name>
            <anchorfile>qwebenginecontextmenudata.html</anchorfile>
            <anchor>editFlags</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineCookieStore</name>
        <filename>qwebenginecookiestore.html</filename>
        <base>QObject</base>
        <class>QWebEngineCookieStore::FilterRequest</class>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual </type>
            <name>~QWebEngineCookieStore</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>dtor.QWebEngineCookieStore</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCookieFilter</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>setCookieFilter</anchor>
            <arglist>(const std::function&lt;bool (const FilterRequest &amp;)&gt; &amp;filterCallback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCookieFilter</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>setCookieFilter-1</anchor>
            <arglist>(std::function&lt;bool (const FilterRequest &amp;)&gt; &amp;&amp;filterCallback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCookie</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>setCookie</anchor>
            <arglist>(const QNetworkCookie &amp;cookie, const QUrl &amp;origin)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>deleteCookie</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>deleteCookie</anchor>
            <arglist>(const QNetworkCookie &amp;cookie, const QUrl &amp;origin)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>deleteSessionCookies</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>deleteSessionCookies</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>deleteAllCookies</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>deleteAllCookies</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadAllCookies</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>loadAllCookies</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cookieAdded</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>cookieAdded</anchor>
            <arglist>(const QNetworkCookie &amp;cookie)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cookieRemoved</name>
            <anchorfile>qwebenginecookiestore.html</anchorfile>
            <anchor>cookieRemoved</anchor>
            <arglist>(const QNetworkCookie &amp;cookie)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineCookieStore::FilterRequest</name>
        <filename>qwebenginecookiestore-filterrequest.html</filename>
    </compound>
    <compound kind="class">
        <name>QWebEngineDownloadItem</name>
        <filename>qwebenginedownloaditem.html</filename>
        <base>QObject</base>
        <member kind="enumeration">
            <name>DownloadState</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadState-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>DownloadRequested</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DownloadInProgress</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DownloadCompleted</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DownloadCancelled</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DownloadInterrupted</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>SavePageFormat</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>SavePageFormat-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>UnknownSaveFormat</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>SavePageFormat-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>SingleHtmlSaveFormat</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>SavePageFormat-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CompleteHtmlSaveFormat</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>SavePageFormat-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MimeHtmlSaveFormat</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>SavePageFormat-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>DownloadInterruptReason</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>NoReason</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileFailed</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileAccessDenied</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileNoSpace</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileNameTooLong</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileTooLarge</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileVirusInfected</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileTransientError</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileBlocked</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileSecurityCheckFailed</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileTooShort</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileHashMismatch</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NetworkFailed</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NetworkTimeout</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NetworkDisconnected</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NetworkServerDown</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NetworkInvalidRequest</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ServerFailed</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ServerBadContent</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ServerUnauthorized</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ServerCertProblem</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ServerForbidden</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ServerUnreachable</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>UserCanceled</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>DownloadInterruptReason-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>DownloadType</name>
            <anchorfile>qwebenginedownloaditem-obsolete.html</anchorfile>
            <anchor>DownloadType-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>Attachment</name>
            <anchorfile>qwebenginedownloaditem-obsolete.html</anchorfile>
            <anchor>DownloadType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DownloadAttribute</name>
            <anchorfile>qwebenginedownloaditem-obsolete.html</anchorfile>
            <anchor>DownloadType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>UserRequested</name>
            <anchorfile>qwebenginedownloaditem-obsolete.html</anchorfile>
            <anchor>DownloadType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>SavePage</name>
            <anchorfile>qwebenginedownloaditem-obsolete.html</anchorfile>
            <anchor>DownloadType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint32</type>
            <name>id</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>id</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineDownloadItem::DownloadState</type>
            <name>state</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>state</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>qint64</type>
            <name>totalBytes</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>totalBytes</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>qint64</type>
            <name>receivedBytes</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>receivedBytes</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>url</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>url</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>mimeType</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>mimeType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>path</name>
            <anchorfile>qwebenginedownloaditem-obsolete.html</anchorfile>
            <anchor>path</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPath</name>
            <anchorfile>qwebenginedownloaditem-obsolete.html</anchorfile>
            <anchor>setPath</anchor>
            <arglist>(QString path)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isFinished</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>isFinished</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isPaused</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>isPaused</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineDownloadItem::SavePageFormat</type>
            <name>savePageFormat</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>savePageFormat</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSavePageFormat</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>setSavePageFormat</anchor>
            <arglist>(QWebEngineDownloadItem::SavePageFormat format)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineDownloadItem::DownloadType</type>
            <name>type</name>
            <anchorfile>qwebenginedownloaditem-obsolete.html</anchorfile>
            <anchor>type</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineDownloadItem::DownloadInterruptReason</type>
            <name>interruptReason</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>interruptReason</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>interruptReasonString</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>interruptReasonString</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isSavePageDownload</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>isSavePageDownload</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>suggestedFileName</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>suggestedFileName</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>downloadDirectory</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>downloadDirectory</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDownloadDirectory</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>setDownloadDirectory</anchor>
            <arglist>(const QString &amp;directory)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>downloadFileName</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>downloadFileName</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDownloadFileName</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>setDownloadFileName</anchor>
            <arglist>(const QString &amp;fileName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEnginePage *</type>
            <name>page</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>page</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>accept</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>accept</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cancel</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>cancel</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>pause</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>pause</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>resume</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>resume</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>finished</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>finished</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stateChanged</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>stateChanged</anchor>
            <arglist>(QWebEngineDownloadItem::DownloadState state)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>downloadProgress</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>downloadProgress</anchor>
            <arglist>(qint64 bytesReceived, qint64 bytesTotal)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>isPausedChanged</name>
            <anchorfile>qwebenginedownloaditem.html</anchorfile>
            <anchor>isPausedChanged</anchor>
            <arglist>(bool isPaused)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineFindTextResult</name>
        <filename>qwebenginefindtextresult.html</filename>
        <member kind="property" type="int">
            <name>numberOfMatches</name>
            <anchorfile>qwebenginefindtextresult.html</anchorfile>
            <anchor>numberOfMatches-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="int">
            <name>activeMatch</name>
            <anchorfile>qwebenginefindtextresult.html</anchorfile>
            <anchor>activeMatch-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>numberOfMatches</name>
            <anchorfile>qwebenginefindtextresult.html</anchorfile>
            <anchor>numberOfMatches-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>activeMatch</name>
            <anchorfile>qwebenginefindtextresult.html</anchorfile>
            <anchor>activeMatch-prop</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineFullScreenRequest</name>
        <filename>qwebenginefullscreenrequest.html</filename>
        <member kind="property" type="bool">
            <name>toggleOn</name>
            <anchorfile>qwebenginefullscreenrequest.html</anchorfile>
            <anchor>toggleOn-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QUrl">
            <name>origin</name>
            <anchorfile>qwebenginefullscreenrequest.html</anchorfile>
            <anchor>origin-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reject</name>
            <anchorfile>qwebenginefullscreenrequest.html</anchorfile>
            <anchor>reject</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>accept</name>
            <anchorfile>qwebenginefullscreenrequest.html</anchorfile>
            <anchor>accept</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>toggleOn</name>
            <anchorfile>qwebenginefullscreenrequest.html</anchorfile>
            <anchor>toggleOn</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const QUrl &amp;</type>
            <name>origin</name>
            <anchorfile>qwebenginefullscreenrequest.html</anchorfile>
            <anchor>origin</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineHistory</name>
        <filename>qwebenginehistory.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clear</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>clear</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QWebEngineHistoryItem&gt;</type>
            <name>items</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>items</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QWebEngineHistoryItem&gt;</type>
            <name>backItems</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>backItems</anchor>
            <arglist>(int maxItems) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QWebEngineHistoryItem&gt;</type>
            <name>forwardItems</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>forwardItems</anchor>
            <arglist>(int maxItems) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>canGoBack</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>canGoBack</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>canGoForward</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>canGoForward</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>back</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>back</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>forward</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>forward</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>goToItem</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>goToItem</anchor>
            <arglist>(const QWebEngineHistoryItem &amp;item)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineHistoryItem</type>
            <name>backItem</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>backItem</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineHistoryItem</type>
            <name>currentItem</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>currentItem</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineHistoryItem</type>
            <name>forwardItem</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>forwardItem</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineHistoryItem</type>
            <name>itemAt</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>itemAt</anchor>
            <arglist>(int i) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>currentItemIndex</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>currentItemIndex</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>count</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>count</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QDataStream &amp;</type>
            <name>operator&lt;&lt;</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>operator-lt-lt</anchor>
            <arglist>(QDataStream &amp;stream, const QWebEngineHistory &amp;history)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QDataStream &amp;</type>
            <name>operator&gt;&gt;</name>
            <anchorfile>qwebenginehistory.html</anchorfile>
            <anchor>operator-gt-gt</anchor>
            <arglist>(QDataStream &amp;stream, QWebEngineHistory &amp;history)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineHistoryItem</name>
        <filename>qwebenginehistoryitem.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineHistoryItem</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>QWebEngineHistoryItem</anchor>
            <arglist>(const QWebEngineHistoryItem &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineHistoryItem &amp;</type>
            <name>operator=</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QWebEngineHistoryItem &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QWebEngineHistoryItem</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>dtor.QWebEngineHistoryItem</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>originalUrl</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>originalUrl</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>url</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>url</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>title</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>title</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QDateTime</type>
            <name>lastVisited</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>lastVisited</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>iconUrl</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>iconUrl</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isValid</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>isValid</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>swap</name>
            <anchorfile>qwebenginehistoryitem.html</anchorfile>
            <anchor>swap</anchor>
            <arglist>(QWebEngineHistoryItem &amp;other)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineHttpRequest</name>
        <filename>qwebenginehttprequest.html</filename>
        <member kind="enumeration">
            <name>Method</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>Method-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>Get</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>Method-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Post</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>Method-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineHttpRequest</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>QWebEngineHttpRequest</anchor>
            <arglist>(const QUrl &amp;url, const QWebEngineHttpRequest::Method &amp;method)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineHttpRequest</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>QWebEngineHttpRequest-1</anchor>
            <arglist>(const QWebEngineHttpRequest &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QWebEngineHttpRequest</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>dtor.QWebEngineHttpRequest</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineHttpRequest &amp;</type>
            <name>operator=</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>operator-eq-1</anchor>
            <arglist>(const QWebEngineHttpRequest &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QWebEngineHttpRequest</type>
            <name>postRequest</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>postRequest</anchor>
            <arglist>(const QUrl &amp;url, const QMap&lt;QString, QString&gt; &amp;postData)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>swap</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>swap</anchor>
            <arglist>(QWebEngineHttpRequest &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QWebEngineHttpRequest &amp;other) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QWebEngineHttpRequest &amp;other) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineHttpRequest::Method</type>
            <name>method</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>method</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setMethod</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>setMethod</anchor>
            <arglist>(QWebEngineHttpRequest::Method method)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>url</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>url</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUrl</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>setUrl</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QByteArray</type>
            <name>postData</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>postData</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPostData</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>setPostData</anchor>
            <arglist>(const QByteArray &amp;postData)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasHeader</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>hasHeader</anchor>
            <arglist>(const QByteArray &amp;headerName) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QVector&lt;QByteArray&gt;</type>
            <name>headers</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>headers</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QByteArray</type>
            <name>header</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>header</anchor>
            <arglist>(const QByteArray &amp;headerName) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHeader</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>setHeader</anchor>
            <arglist>(const QByteArray &amp;headerName, const QByteArray &amp;headerValue)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>unsetHeader</name>
            <anchorfile>qwebenginehttprequest.html</anchorfile>
            <anchor>unsetHeader</anchor>
            <arglist>(const QByteArray &amp;key)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineNotification</name>
        <filename>qwebenginenotification.html</filename>
        <base>QObject</base>
        <member kind="property" type="QUrl">
            <name>origin</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>origin-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>title</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>title-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>message</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>message-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>tag</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>tag-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>language</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>language-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="Qt::LayoutDirection">
            <name>direction</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>direction-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>matches</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>matches</anchor>
            <arglist>(const QWebEngineNotification *other) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>origin</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>origin-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QImage</type>
            <name>icon</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>icon</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>title</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>title-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>message</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>message-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>tag</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>tag-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>language</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>language-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>Qt::LayoutDirection</type>
            <name>direction</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>direction-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>show</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>show</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>click</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>click</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>close</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>close</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>closed</name>
            <anchorfile>qwebenginenotification.html</anchorfile>
            <anchor>closed</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEnginePage</name>
        <filename>qwebenginepage.html</filename>
        <base>QObject</base>
        <member kind="property" type="QString">
            <name>selectedText</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>selectedText-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>hasSelection</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>hasSelection-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QUrl">
            <name>requestedUrl</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>requestedUrl-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="qreal">
            <name>zoomFactor</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>zoomFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>title</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>title-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QUrl">
            <name>url</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>url-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QUrl">
            <name>iconUrl</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>iconUrl-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QIcon">
            <name>icon</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>icon-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QColor">
            <name>backgroundColor</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>backgroundColor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QSizeF">
            <name>contentsSize</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>contentsSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QPointF">
            <name>scrollPosition</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>scrollPosition-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>audioMuted</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>audioMuted-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>recentlyAudible</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>recentlyAudible-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>visible</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>visible-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="LifecycleState">
            <name>lifecycleState</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>lifecycleState-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="LifecycleState">
            <name>recommendedState</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>recommendedState-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="qint64">
            <name>renderProcessPid</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>renderProcessPid-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>WebAction</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>NoWebAction</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Back</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Forward</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Stop</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Reload</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Cut</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Copy</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Paste</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Undo</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Redo</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>SelectAll</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ReloadAndBypassCache</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>PasteAndMatchStyle</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>OpenLinkInThisWindow</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>OpenLinkInNewWindow</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>OpenLinkInNewTab</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CopyLinkToClipboard</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DownloadLinkToDisk</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CopyImageToClipboard</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CopyImageUrlToClipboard</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DownloadImageToDisk</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CopyMediaUrlToClipboard</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ToggleMediaControls</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ToggleMediaLoop</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ToggleMediaPlayPause</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ToggleMediaMute</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DownloadMediaToDisk</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>InspectElement</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ExitFullScreen</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>RequestClose</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Unselect</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>SavePage</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>OpenLinkInNewBackgroundTab</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ViewSource</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ToggleBold</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ToggleItalic</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ToggleUnderline</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ToggleStrikethrough</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AlignLeft</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AlignCenter</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AlignRight</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AlignJustified</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Indent</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Outdent</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>InsertOrderedList</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>InsertUnorderedList</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>WebActionCount</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebAction-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>FindFlag</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>FindFlag-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>FindBackward</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>FindFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FindCaseSensitively</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>FindFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="QWebEnginePage::FindFlag">
            <name>FindFlags</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>FindFlag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>WebWindowType</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebWindowType-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>WebBrowserWindow</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebWindowType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>WebBrowserTab</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebWindowType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>WebDialog</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebWindowType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>WebBrowserBackgroundTab</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>WebWindowType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>PermissionPolicy</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>PermissionPolicy-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>PermissionUnknown</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>PermissionPolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>PermissionGrantedByUser</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>PermissionPolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>PermissionDeniedByUser</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>PermissionPolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>NavigationType</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeLinkClicked</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeTyped</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeFormSubmitted</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeBackForward</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeReload</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeOther</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeRedirect</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>Feature</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>Feature-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>Notifications</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>Feature-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Geolocation</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>Feature-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaAudioCapture</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>Feature-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaVideoCapture</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>Feature-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MediaAudioVideoCapture</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>Feature-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MouseLock</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>Feature-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DesktopVideoCapture</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>Feature-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DesktopAudioVideoCapture</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>Feature-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>FileSelectionMode</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>FileSelectionMode-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>FileSelectOpen</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>FileSelectionMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FileSelectOpenMultiple</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>FileSelectionMode-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>JavaScriptConsoleMessageLevel</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>JavaScriptConsoleMessageLevel-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>InfoMessageLevel</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>JavaScriptConsoleMessageLevel-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>WarningMessageLevel</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>JavaScriptConsoleMessageLevel-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ErrorMessageLevel</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>JavaScriptConsoleMessageLevel-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>RenderProcessTerminationStatus</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>RenderProcessTerminationStatus-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>NormalTerminationStatus</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>RenderProcessTerminationStatus-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AbnormalTerminationStatus</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>RenderProcessTerminationStatus-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CrashedTerminationStatus</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>RenderProcessTerminationStatus-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>KilledTerminationStatus</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>RenderProcessTerminationStatus-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>LifecycleState</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>LifecycleState-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>Active</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>LifecycleState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Frozen</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>LifecycleState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Discarded</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>LifecycleState-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEnginePage</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>QWebEnginePage</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEnginePage</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>QWebEnginePage-1</anchor>
            <arglist>(QWebEngineProfile *profile, QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual </type>
            <name>~QWebEnginePage</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>dtor.QWebEnginePage</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineHistory *</type>
            <name>history</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>history</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setView</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>setView</anchor>
            <arglist>(QWidget *view)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWidget *</type>
            <name>view</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>view</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasSelection</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>hasSelection-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>selectedText</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>selectedText-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineProfile *</type>
            <name>profile</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>profile</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QAction *</type>
            <name>action</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>action</anchor>
            <arglist>(QWebEnginePage::WebAction action) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>triggerAction</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>triggerAction</anchor>
            <arglist>(QWebEnginePage::WebAction action, bool checked)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>replaceMisspelledWord</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>replaceMisspelledWord</anchor>
            <arglist>(const QString &amp;replacement)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>event</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>event</anchor>
            <arglist>(QEvent *e) override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>findText</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>findText</anchor>
            <arglist>(const QString &amp;subString, QWebEnginePage::FindFlags options, const QWebEngineCallback&lt;bool&gt; &amp;resultCallback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMenu *</type>
            <name>createStandardContextMenu</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>createStandardContextMenu</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFeaturePermission</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>setFeaturePermission</anchor>
            <arglist>(const QUrl &amp;securityOrigin, QWebEnginePage::Feature feature, QWebEnginePage::PermissionPolicy policy)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>load</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>load</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>load</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>load-1</anchor>
            <arglist>(const QWebEngineHttpRequest &amp;request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>download</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>download</anchor>
            <arglist>(const QUrl &amp;url, const QString &amp;filename)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHtml</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>setHtml</anchor>
            <arglist>(const QString &amp;html, const QUrl &amp;baseUrl)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setContent</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>setContent</anchor>
            <arglist>(const QByteArray &amp;data, const QString &amp;mimeType, const QUrl &amp;baseUrl)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>toHtml</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>toHtml</anchor>
            <arglist>(const QWebEngineCallback&lt;const QString &amp;&gt; &amp;resultCallback) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>toPlainText</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>toPlainText</anchor>
            <arglist>(const QWebEngineCallback&lt;const QString &amp;&gt; &amp;resultCallback) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>title</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>title-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUrl</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>url-prop</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>url</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>url-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>requestedUrl</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>requestedUrl-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>iconUrl</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>iconUrl-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QIcon</type>
            <name>icon</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>icon-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>qreal</type>
            <name>zoomFactor</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>zoomFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setZoomFactor</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>zoomFactor-prop</anchor>
            <arglist>(qreal factor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QPointF</type>
            <name>scrollPosition</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>scrollPosition-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QSizeF</type>
            <name>contentsSize</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>contentsSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>runJavaScript</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>runJavaScript</anchor>
            <arglist>(const QString &amp;scriptSource)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>runJavaScript</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>runJavaScript-1</anchor>
            <arglist>(const QString &amp;scriptSource, quint32 worldId)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>runJavaScript</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>runJavaScript-2</anchor>
            <arglist>(const QString &amp;scriptSource, const QWebEngineCallback&lt;const QVariant &amp;&gt; &amp;resultCallback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>runJavaScript</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>runJavaScript-3</anchor>
            <arglist>(const QString &amp;scriptSource, quint32 worldId, const QWebEngineCallback&lt;const QVariant &amp;&gt; &amp;resultCallback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineScriptCollection &amp;</type>
            <name>scripts</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>scripts</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineSettings *</type>
            <name>settings</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>settings</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebChannel *</type>
            <name>webChannel</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>webChannel</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWebChannel</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>setWebChannel-1</anchor>
            <arglist>(QWebChannel *channel)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWebChannel</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>setWebChannel</anchor>
            <arglist>(QWebChannel *channel, uint worldId)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QColor</type>
            <name>backgroundColor</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>backgroundColor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setBackgroundColor</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>backgroundColor-prop</anchor>
            <arglist>(const QColor &amp;color)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>save</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>save</anchor>
            <arglist>(const QString &amp;filePath, QWebEngineDownloadItem::SavePageFormat format) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isAudioMuted</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>audioMuted-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAudioMuted</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>audioMuted-prop</anchor>
            <arglist>(bool muted)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>recentlyAudible</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>recentlyAudible-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>qint64</type>
            <name>renderProcessPid</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>renderProcessPid-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>printToPdf</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>printToPdf</anchor>
            <arglist>(const QString &amp;filePath, const QPageLayout &amp;pageLayout)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>printToPdf</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>printToPdf-1</anchor>
            <arglist>(const QWebEngineCallback&lt;const QByteArray &amp;&gt; &amp;resultCallback, const QPageLayout &amp;pageLayout)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>print</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>print</anchor>
            <arglist>(QPrinter *printer, const QWebEngineCallback&lt;bool&gt; &amp;resultCallback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInspectedPage</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>setInspectedPage</anchor>
            <arglist>(QWebEnginePage *page)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEnginePage *</type>
            <name>inspectedPage</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>inspectedPage</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDevToolsPage</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>setDevToolsPage</anchor>
            <arglist>(QWebEnginePage *devToolsPage)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEnginePage *</type>
            <name>devToolsPage</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>devToolsPage</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUrlRequestInterceptor</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>setUrlRequestInterceptor</anchor>
            <arglist>(QWebEngineUrlRequestInterceptor *interceptor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const QWebEngineContextMenuData &amp;</type>
            <name>contextMenuData</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>contextMenuData</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEnginePage::LifecycleState</type>
            <name>lifecycleState</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>lifecycleState-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setLifecycleState</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>lifecycleState-prop</anchor>
            <arglist>(QWebEnginePage::LifecycleState state)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEnginePage::LifecycleState</type>
            <name>recommendedState</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>recommendedState-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isVisible</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>visible-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setVisible</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>visible-prop</anchor>
            <arglist>(bool visible)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadStarted</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>loadStarted</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadProgress</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>loadProgress</anchor>
            <arglist>(int progress)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadFinished</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>loadFinished</anchor>
            <arglist>(bool ok)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>linkHovered</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>linkHovered</anchor>
            <arglist>(const QString &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectionChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>selectionChanged</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>geometryChangeRequested</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>geometryChangeRequested</anchor>
            <arglist>(const QRect &amp;geom)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>windowCloseRequested</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>windowCloseRequested</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>featurePermissionRequested</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>featurePermissionRequested</anchor>
            <arglist>(const QUrl &amp;securityOrigin, QWebEnginePage::Feature feature)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>featurePermissionRequestCanceled</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>featurePermissionRequestCanceled</anchor>
            <arglist>(const QUrl &amp;securityOrigin, QWebEnginePage::Feature feature)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>fullScreenRequested</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>fullScreenRequested</anchor>
            <arglist>(QWebEngineFullScreenRequest fullScreenRequest)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>quotaRequested</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>quotaRequested</anchor>
            <arglist>(QWebEngineQuotaRequest quotaRequest)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>registerProtocolHandlerRequested</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>registerProtocolHandlerRequested</anchor>
            <arglist>(QWebEngineRegisterProtocolHandlerRequest request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectClientCertificate</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>selectClientCertificate</anchor>
            <arglist>(QWebEngineClientCertificateSelection clientCertificateSelection)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>authenticationRequired</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>authenticationRequired</anchor>
            <arglist>(const QUrl &amp;requestUrl, QAuthenticator *authenticator)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>proxyAuthenticationRequired</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>proxyAuthenticationRequired</anchor>
            <arglist>(const QUrl &amp;requestUrl, QAuthenticator *authenticator, const QString &amp;proxyHost)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>renderProcessTerminated</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>renderProcessTerminated</anchor>
            <arglist>(QWebEnginePage::RenderProcessTerminationStatus terminationStatus, int exitCode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>titleChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>titleChanged</anchor>
            <arglist>(const QString &amp;title)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>urlChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>urlChanged</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>iconUrlChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>iconUrlChanged</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>iconChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>iconChanged</anchor>
            <arglist>(const QIcon &amp;icon)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>scrollPositionChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>scrollPosition-prop</anchor>
            <arglist>(const QPointF &amp;position)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>contentsSizeChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>contentsSize-prop</anchor>
            <arglist>(const QSizeF &amp;size)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>audioMutedChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>audioMutedChanged</anchor>
            <arglist>(bool muted)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>recentlyAudibleChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>recentlyAudibleChanged</anchor>
            <arglist>(bool recentlyAudible)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>renderProcessPidChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>renderProcessPidChanged</anchor>
            <arglist>(qint64 pid)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>pdfPrintingFinished</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>pdfPrintingFinished</anchor>
            <arglist>(const QString &amp;filePath, bool success)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>printRequested</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>printRequested</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>visibleChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>visible-prop</anchor>
            <arglist>(bool visible)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>lifecycleStateChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>lifecycleState-prop</anchor>
            <arglist>(QWebEnginePage::LifecycleState state)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>recommendedStateChanged</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>recommendedState-prop</anchor>
            <arglist>(QWebEnginePage::LifecycleState state)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>findTextFinished</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>findTextFinished</anchor>
            <arglist>(const QWebEngineFindTextResult &amp;result)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual QWebEnginePage *</type>
            <name>createWindow</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>createWindow</anchor>
            <arglist>(QWebEnginePage::WebWindowType type)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual QStringList</type>
            <name>chooseFiles</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>chooseFiles</anchor>
            <arglist>(QWebEnginePage::FileSelectionMode mode, const QStringList &amp;oldFiles, const QStringList &amp;acceptedMimeTypes)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>javaScriptAlert</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>javaScriptAlert</anchor>
            <arglist>(const QUrl &amp;securityOrigin, const QString &amp;msg)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>javaScriptConfirm</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>javaScriptConfirm</anchor>
            <arglist>(const QUrl &amp;securityOrigin, const QString &amp;msg)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>javaScriptPrompt</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>javaScriptPrompt</anchor>
            <arglist>(const QUrl &amp;securityOrigin, const QString &amp;msg, const QString &amp;defaultValue, QString *result)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>javaScriptConsoleMessage</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>javaScriptConsoleMessage</anchor>
            <arglist>(QWebEnginePage::JavaScriptConsoleMessageLevel level, const QString &amp;message, int lineNumber, const QString &amp;sourceID)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>certificateError</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>certificateError</anchor>
            <arglist>(const QWebEngineCertificateError &amp;certificateError)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>acceptNavigationRequest</name>
            <anchorfile>qwebenginepage.html</anchorfile>
            <anchor>acceptNavigationRequest</anchor>
            <arglist>(const QUrl &amp;url, QWebEnginePage::NavigationType type, bool isMainFrame)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineProfile</name>
        <filename>qwebengineprofile.html</filename>
        <base>QObject</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineProfile</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>QWebEngineProfile</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineProfile</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>QWebEngineProfile-1</anchor>
            <arglist>(const QString &amp;storageName, QObject *parent)</arglist>
        </member>
        <member kind="enumeration">
            <name>HttpCacheType</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>HttpCacheType-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>MemoryHttpCache</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>HttpCacheType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DiskHttpCache</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>HttpCacheType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NoCache</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>HttpCacheType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>PersistentCookiesPolicy</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>PersistentCookiesPolicy-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>NoPersistentCookies</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>PersistentCookiesPolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AllowPersistentCookies</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>PersistentCookiesPolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ForcePersistentCookies</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>PersistentCookiesPolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>storageName</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>storageName</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isOffTheRecord</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>isOffTheRecord</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>persistentStoragePath</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>persistentStoragePath</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPersistentStoragePath</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setPersistentStoragePath</anchor>
            <arglist>(const QString &amp;path)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>cachePath</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>cachePath</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setCachePath</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setCachePath</anchor>
            <arglist>(const QString &amp;path)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>httpUserAgent</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>httpUserAgent</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHttpUserAgent</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setHttpUserAgent</anchor>
            <arglist>(const QString &amp;userAgent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineProfile::HttpCacheType</type>
            <name>httpCacheType</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>httpCacheType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHttpCacheType</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setHttpCacheType</anchor>
            <arglist>(QWebEngineProfile::HttpCacheType httpCacheType)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHttpAcceptLanguage</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setHttpAcceptLanguage</anchor>
            <arglist>(const QString &amp;httpAcceptLanguage)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>httpAcceptLanguage</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>httpAcceptLanguage</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineProfile::PersistentCookiesPolicy</type>
            <name>persistentCookiesPolicy</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>persistentCookiesPolicy</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPersistentCookiesPolicy</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setPersistentCookiesPolicy</anchor>
            <arglist>(QWebEngineProfile::PersistentCookiesPolicy newPersistentCookiesPolicy)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>httpCacheMaximumSize</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>httpCacheMaximumSize</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHttpCacheMaximumSize</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setHttpCacheMaximumSize</anchor>
            <arglist>(int maxSize)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineCookieStore *</type>
            <name>cookieStore</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>cookieStore</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRequestInterceptor</name>
            <anchorfile>qwebengineprofile-obsolete.html</anchorfile>
            <anchor>setRequestInterceptor</anchor>
            <arglist>(QWebEngineUrlRequestInterceptor *interceptor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUrlRequestInterceptor</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setUrlRequestInterceptor</anchor>
            <arglist>(QWebEngineUrlRequestInterceptor *interceptor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearAllVisitedLinks</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>clearAllVisitedLinks</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearVisitedLinks</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>clearVisitedLinks</anchor>
            <arglist>(const QList&lt;QUrl&gt; &amp;urls)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>visitedLinksContainsUrl</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>visitedLinksContainsUrl</anchor>
            <arglist>(const QUrl &amp;url) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineSettings *</type>
            <name>settings</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>settings</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineScriptCollection *</type>
            <name>scripts</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>scripts</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>const QWebEngineUrlSchemeHandler *</type>
            <name>urlSchemeHandler</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>urlSchemeHandler</anchor>
            <arglist>(const QByteArray &amp;scheme) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>installUrlSchemeHandler</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>installUrlSchemeHandler</anchor>
            <arglist>(const QByteArray &amp;scheme, QWebEngineUrlSchemeHandler *handler)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeUrlScheme</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>removeUrlScheme</anchor>
            <arglist>(const QByteArray &amp;scheme)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeUrlSchemeHandler</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>removeUrlSchemeHandler</anchor>
            <arglist>(QWebEngineUrlSchemeHandler *handler)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>removeAllUrlSchemeHandlers</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>removeAllUrlSchemeHandlers</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearHttpCache</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>clearHttpCache</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSpellCheckLanguages</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setSpellCheckLanguages</anchor>
            <arglist>(const QStringList &amp;languages)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QStringList</type>
            <name>spellCheckLanguages</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>spellCheckLanguages</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSpellCheckEnabled</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setSpellCheckEnabled</anchor>
            <arglist>(bool enable)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isSpellCheckEnabled</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>isSpellCheckEnabled</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUseForGlobalCertificateVerification</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setUseForGlobalCertificateVerification</anchor>
            <arglist>(bool enabled)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isUsedForGlobalCertificateVerification</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>isUsedForGlobalCertificateVerification</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>downloadPath</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>downloadPath</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDownloadPath</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setDownloadPath</anchor>
            <arglist>(const QString &amp;path)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setNotificationPresenter</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>setNotificationPresenter</anchor>
            <arglist>(std::function&lt;void (std::unique_ptr&lt;QWebEngineNotification&gt;)&gt; notificationPresenter)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineClientCertificateStore *</type>
            <name>clientCertificateStore</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>clientCertificateStore</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QWebEngineProfile *</type>
            <name>defaultProfile</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>defaultProfile</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>downloadRequested</name>
            <anchorfile>qwebengineprofile.html</anchorfile>
            <anchor>downloadRequested</anchor>
            <arglist>(QWebEngineDownloadItem *download)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineQuotaRequest</name>
        <filename>qwebenginequotarequest.html</filename>
        <member kind="property" type="QUrl">
            <name>origin</name>
            <anchorfile>qwebenginequotarequest.html</anchorfile>
            <anchor>origin-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="qint64">
            <name>requestedSize</name>
            <anchorfile>qwebenginequotarequest.html</anchorfile>
            <anchor>requestedSize-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>accept</name>
            <anchorfile>qwebenginequotarequest.html</anchorfile>
            <anchor>accept</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reject</name>
            <anchorfile>qwebenginequotarequest.html</anchorfile>
            <anchor>reject</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>origin</name>
            <anchorfile>qwebenginequotarequest.html</anchorfile>
            <anchor>origin-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>qint64</type>
            <name>requestedSize</name>
            <anchorfile>qwebenginequotarequest.html</anchorfile>
            <anchor>requestedSize-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qwebenginequotarequest.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QWebEngineQuotaRequest &amp;that) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qwebenginequotarequest.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QWebEngineQuotaRequest &amp;that) const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineRegisterProtocolHandlerRequest</name>
        <filename>qwebengineregisterprotocolhandlerrequest.html</filename>
        <member kind="property" type="QUrl">
            <name>origin</name>
            <anchorfile>qwebengineregisterprotocolhandlerrequest.html</anchorfile>
            <anchor>origin-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>scheme</name>
            <anchorfile>qwebengineregisterprotocolhandlerrequest.html</anchorfile>
            <anchor>scheme-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>accept</name>
            <anchorfile>qwebengineregisterprotocolhandlerrequest.html</anchorfile>
            <anchor>accept</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reject</name>
            <anchorfile>qwebengineregisterprotocolhandlerrequest.html</anchorfile>
            <anchor>reject</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>origin</name>
            <anchorfile>qwebengineregisterprotocolhandlerrequest.html</anchorfile>
            <anchor>origin-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>scheme</name>
            <anchorfile>qwebengineregisterprotocolhandlerrequest.html</anchorfile>
            <anchor>scheme-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qwebengineregisterprotocolhandlerrequest.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QWebEngineRegisterProtocolHandlerRequest &amp;that) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qwebengineregisterprotocolhandlerrequest.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QWebEngineRegisterProtocolHandlerRequest &amp;that) const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineScript</name>
        <filename>qwebenginescript.html</filename>
        <member kind="enumeration">
            <name>InjectionPoint</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>InjectionPoint-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>Deferred</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>InjectionPoint-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DocumentReady</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>InjectionPoint-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DocumentCreation</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>InjectionPoint-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>ScriptWorldId</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>ScriptWorldId-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>MainWorld</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>ScriptWorldId-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ApplicationWorld</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>ScriptWorldId-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>UserWorld</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>ScriptWorldId-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineScript</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>QWebEngineScript</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineScript</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>QWebEngineScript-1</anchor>
            <arglist>(const QWebEngineScript &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QWebEngineScript</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>dtor.QWebEngineScript</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineScript &amp;</type>
            <name>operator=</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QWebEngineScript &amp;other)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isNull</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>isNull</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>name</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>name</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setName</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>setName</anchor>
            <arglist>(const QString &amp;scriptName)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>sourceCode</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>sourceCode</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSourceCode</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>setSourceCode</anchor>
            <arglist>(const QString &amp;scriptSource)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineScript::InjectionPoint</type>
            <name>injectionPoint</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>injectionPoint</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setInjectionPoint</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>setInjectionPoint</anchor>
            <arglist>(QWebEngineScript::InjectionPoint p)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>quint32</type>
            <name>worldId</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>worldId</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setWorldId</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>setWorldId</anchor>
            <arglist>(quint32 id)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>runsOnSubFrames</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>runsOnSubFrames</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setRunsOnSubFrames</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>setRunsOnSubFrames</anchor>
            <arglist>(bool on)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QWebEngineScript &amp;other) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QWebEngineScript &amp;other) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>swap</name>
            <anchorfile>qwebenginescript.html</anchorfile>
            <anchor>swap</anchor>
            <arglist>(QWebEngineScript &amp;other)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineScriptCollection</name>
        <filename>qwebenginescriptcollection.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QWebEngineScriptCollection</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>dtor.QWebEngineScriptCollection</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>isEmpty</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>isEmpty</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>count</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>count</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>size</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>size</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>contains</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>contains</anchor>
            <arglist>(const QWebEngineScript &amp;value) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineScript</type>
            <name>findScript</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>findScript</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QWebEngineScript&gt;</type>
            <name>findScripts</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>findScripts</anchor>
            <arglist>(const QString &amp;name) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>insert</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>insert</anchor>
            <arglist>(const QWebEngineScript &amp;s)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>insert</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>insert-1</anchor>
            <arglist>(const QList&lt;QWebEngineScript&gt; &amp;list)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>remove</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>remove</anchor>
            <arglist>(const QWebEngineScript &amp;script)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clear</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>clear</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QList&lt;QWebEngineScript&gt;</type>
            <name>toList</name>
            <anchorfile>qwebenginescriptcollection.html</anchorfile>
            <anchor>toList</anchor>
            <arglist>() const const</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineSettings</name>
        <filename>qwebenginesettings.html</filename>
        <member kind="enumeration">
            <name>FontFamily</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontFamily-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>StandardFont</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontFamily-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FixedFont</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontFamily-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>SerifFont</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontFamily-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>SansSerifFont</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontFamily-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CursiveFont</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontFamily-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FantasyFont</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontFamily-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>PictographFont</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontFamily-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>WebAttribute</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>AutoLoadImages</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>JavascriptEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>JavascriptCanOpenWindows</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>JavascriptCanAccessClipboard</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>LinksIncludedInFocusChain</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>LocalStorageEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>LocalContentCanAccessRemoteUrls</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>XSSAuditingEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>SpatialNavigationEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>LocalContentCanAccessFileUrls</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>HyperlinkAuditingEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ScrollAnimatorEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ErrorPageEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>PluginsEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FullScreenSupportEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ScreenCaptureEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>WebGLEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Accelerated2dCanvasEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AutoLoadIconsForPage</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>TouchIconsEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>FocusOnNavigationEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>PrintElementBackgrounds</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AllowRunningInsecureContent</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AllowGeolocationOnInsecureOrigins</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AllowWindowActivationFromJavaScript</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ShowScrollBars</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>PlaybackRequiresUserGesture</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>WebRTCPublicInterfacesOnly</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>JavascriptCanPaste</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DnsPrefetchEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>PdfViewerEnabled</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>WebAttribute-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>FontSize</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontSize-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>MinimumFontSize</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontSize-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>MinimumLogicalFontSize</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontSize-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DefaultFontSize</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontSize-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>DefaultFixedFontSize</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>FontSize-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>UnknownUrlSchemePolicy</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>UnknownUrlSchemePolicy-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>DisallowUnknownUrlSchemes</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>UnknownUrlSchemePolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AllowUnknownUrlSchemesFromUserInteraction</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>UnknownUrlSchemePolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>AllowAllUnknownUrlSchemes</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>UnknownUrlSchemePolicy-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QWebEngineSettings *</type>
            <name>globalSettings</name>
            <anchorfile>qwebenginesettings-obsolete.html</anchorfile>
            <anchor>globalSettings</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QWebEngineSettings *</type>
            <name>defaultSettings</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>defaultSettings</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFontFamily</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>setFontFamily</anchor>
            <arglist>(QWebEngineSettings::FontFamily which, const QString &amp;family)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>fontFamily</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>fontFamily</anchor>
            <arglist>(QWebEngineSettings::FontFamily which) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>resetFontFamily</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>resetFontFamily</anchor>
            <arglist>(QWebEngineSettings::FontFamily which)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFontSize</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>setFontSize</anchor>
            <arglist>(QWebEngineSettings::FontSize type, int size)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>fontSize</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>fontSize</anchor>
            <arglist>(QWebEngineSettings::FontSize type) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>resetFontSize</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>resetFontSize</anchor>
            <arglist>(QWebEngineSettings::FontSize type)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setAttribute</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>setAttribute</anchor>
            <arglist>(QWebEngineSettings::WebAttribute attribute, bool on)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>testAttribute</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>testAttribute</anchor>
            <arglist>(QWebEngineSettings::WebAttribute attribute) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>resetAttribute</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>resetAttribute</anchor>
            <arglist>(QWebEngineSettings::WebAttribute attribute)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDefaultTextEncoding</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>setDefaultTextEncoding</anchor>
            <arglist>(const QString &amp;encoding)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>defaultTextEncoding</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>defaultTextEncoding</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineSettings::UnknownUrlSchemePolicy</type>
            <name>unknownUrlSchemePolicy</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>unknownUrlSchemePolicy</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUnknownUrlSchemePolicy</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>setUnknownUrlSchemePolicy</anchor>
            <arglist>(QWebEngineSettings::UnknownUrlSchemePolicy policy)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>resetUnknownUrlSchemePolicy</name>
            <anchorfile>qwebenginesettings.html</anchorfile>
            <anchor>resetUnknownUrlSchemePolicy</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineUrlRequestInfo</name>
        <filename>qwebengineurlrequestinfo.html</filename>
        <member kind="enumeration">
            <name>ResourceType</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeMainFrame</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeSubFrame</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeStylesheet</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeScript</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeImage</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeFontResource</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeSubResource</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeObject</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeMedia</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeWorker</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeSharedWorker</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypePrefetch</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeFavicon</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeXhr</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypePing</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeServiceWorker</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeCspReport</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypePluginResource</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeNavigationPreloadMainFrame</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeNavigationPreloadSubFrame</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ResourceTypeUnknown</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>ResourceType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>NavigationType</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeLink</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeTyped</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeFormSubmitted</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeBackForward</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeReload</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeOther</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NavigationTypeRedirect</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>NavigationType-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineUrlRequestInfo::ResourceType</type>
            <name>resourceType</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>resourceType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineUrlRequestInfo::NavigationType</type>
            <name>navigationType</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>navigationType</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>requestUrl</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>requestUrl</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>firstPartyUrl</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>firstPartyUrl</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>initiator</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>initiator</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QByteArray</type>
            <name>requestMethod</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>requestMethod</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>block</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>block</anchor>
            <arglist>(bool shouldBlock)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>redirect</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>redirect</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHttpHeader</name>
            <anchorfile>qwebengineurlrequestinfo.html</anchorfile>
            <anchor>setHttpHeader</anchor>
            <arglist>(const QByteArray &amp;name, const QByteArray &amp;value)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineUrlRequestInterceptor</name>
        <filename>qwebengineurlrequestinterceptor.html</filename>
        <base>QObject</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineUrlRequestInterceptor</name>
            <anchorfile>qwebengineurlrequestinterceptor.html</anchorfile>
            <anchor>QWebEngineUrlRequestInterceptor-1</anchor>
            <arglist>(QObject *p)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="pure" static="no">
            <type>virtual void</type>
            <name>interceptRequest</name>
            <anchorfile>qwebengineurlrequestinterceptor.html</anchorfile>
            <anchor>interceptRequest</anchor>
            <arglist>(QWebEngineUrlRequestInfo &amp;info) = 0</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineUrlRequestJob</name>
        <filename>qwebengineurlrequestjob.html</filename>
        <base>QObject</base>
        <member kind="enumeration">
            <name>Error</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>Error-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>NoError</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>UrlNotFound</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>UrlInvalid</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>RequestAborted</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>RequestDenied</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>RequestFailed</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>Error-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>requestUrl</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>requestUrl</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QByteArray</type>
            <name>requestMethod</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>requestMethod</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>initiator</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>initiator</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QMap&lt;QByteArray, QByteArray&gt;</type>
            <name>requestHeaders</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>requestHeaders</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reply</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>reply</anchor>
            <arglist>(const QByteArray &amp;contentType, QIODevice *device)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>fail</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>fail</anchor>
            <arglist>(QWebEngineUrlRequestJob::Error r)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>redirect</name>
            <anchorfile>qwebengineurlrequestjob.html</anchorfile>
            <anchor>redirect</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineUrlScheme</name>
        <filename>qwebengineurlscheme.html</filename>
        <member kind="enumeration">
            <name>Syntax</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Syntax-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>HostPortAndUserInformation</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Syntax-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>HostAndPort</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Syntax-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Host</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Syntax-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>Path</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Syntax-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>SpecialPort</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>SpecialPort-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>PortUnspecified</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>SpecialPort-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumeration">
            <name>Flag</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
        </member>
        <member kind="enumvalue">
            <name>SecureScheme</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>LocalScheme</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>LocalAccessAllowed</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>NoAccessAllowed</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ServiceWorkersAllowed</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ViewSourceAllowed</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>ContentSecurityPolicyIgnored</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="enumvalue">
            <name>CorsEnabled</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="typedef" type="QWebEngineUrlScheme::Flag">
            <name>Flags</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>Flag-enum</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineUrlScheme</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>QWebEngineUrlScheme</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineUrlScheme</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>QWebEngineUrlScheme-1</anchor>
            <arglist>(const QByteArray &amp;name)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineUrlScheme</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>QWebEngineUrlScheme-2</anchor>
            <arglist>(const QWebEngineUrlScheme &amp;that)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineUrlScheme &amp;</type>
            <name>operator=</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>operator-eq</anchor>
            <arglist>(const QWebEngineUrlScheme &amp;that)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineUrlScheme</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>QWebEngineUrlScheme-3</anchor>
            <arglist>(QWebEngineUrlScheme &amp;&amp;that)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineUrlScheme &amp;</type>
            <name>operator=</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>operator-eq-1</anchor>
            <arglist>(QWebEngineUrlScheme &amp;&amp;that)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>~QWebEngineUrlScheme</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>dtor.QWebEngineUrlScheme</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator==</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>operator-eq-eq</anchor>
            <arglist>(const QWebEngineUrlScheme &amp;that) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>operator!=</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>operator-not-eq</anchor>
            <arglist>(const QWebEngineUrlScheme &amp;that) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QByteArray</type>
            <name>name</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>name</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setName</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>setName</anchor>
            <arglist>(const QByteArray &amp;newValue)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineUrlScheme::Syntax</type>
            <name>syntax</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>syntax</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setSyntax</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>setSyntax</anchor>
            <arglist>(QWebEngineUrlScheme::Syntax newValue)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>int</type>
            <name>defaultPort</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>defaultPort</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setDefaultPort</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>setDefaultPort</anchor>
            <arglist>(int newValue)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineUrlScheme::Flags</type>
            <name>flags</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>flags</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setFlags</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>setFlags</anchor>
            <arglist>(QWebEngineUrlScheme::Flags newValue)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>void</type>
            <name>registerScheme</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>registerScheme</anchor>
            <arglist>(const QWebEngineUrlScheme &amp;scheme)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="yes">
            <type>QWebEngineUrlScheme</type>
            <name>schemeByName</name>
            <anchorfile>qwebengineurlscheme.html</anchorfile>
            <anchor>schemeByName</anchor>
            <arglist>(const QByteArray &amp;name)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineUrlSchemeHandler</name>
        <filename>qwebengineurlschemehandler.html</filename>
        <base>QObject</base>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineUrlSchemeHandler</name>
            <anchorfile>qwebengineurlschemehandler.html</anchorfile>
            <anchor>QWebEngineUrlSchemeHandler</anchor>
            <arglist>(QObject *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual </type>
            <name>~QWebEngineUrlSchemeHandler</name>
            <anchorfile>qwebengineurlschemehandler.html</anchorfile>
            <anchor>dtor.QWebEngineUrlSchemeHandler</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="pure" static="no">
            <type>virtual void</type>
            <name>requestStarted</name>
            <anchorfile>qwebengineurlschemehandler.html</anchorfile>
            <anchor>requestStarted</anchor>
            <arglist>(QWebEngineUrlRequestJob *request) = 0</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QWebEngineView</name>
        <filename>qwebengineview.html</filename>
        <base>QWidget</base>
        <member kind="property" type="QString">
            <name>title</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>title-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QUrl">
            <name>url</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>url-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QUrl">
            <name>iconUrl</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>iconUrl-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QIcon">
            <name>icon</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>icon-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="QString">
            <name>selectedText</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>selectedText-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="bool">
            <name>hasSelection</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>hasSelection-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="property" type="qreal">
            <name>zoomFactor</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>zoomFactor-prop</anchor>
            <arglist></arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>QWebEngineView</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>QWebEngineView</anchor>
            <arglist>(QWidget *parent)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual </type>
            <name>~QWebEngineView</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>dtor.QWebEngineView</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEnginePage *</type>
            <name>page</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>page</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setPage</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>setPage</anchor>
            <arglist>(QWebEnginePage *page)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>load</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>load</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>load</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>load-1</anchor>
            <arglist>(const QWebEngineHttpRequest &amp;request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setHtml</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>setHtml</anchor>
            <arglist>(const QString &amp;html, const QUrl &amp;baseUrl)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setContent</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>setContent</anchor>
            <arglist>(const QByteArray &amp;data, const QString &amp;mimeType, const QUrl &amp;baseUrl)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineHistory *</type>
            <name>history</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>history</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>title</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>title-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setUrl</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>url-prop</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>url</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>url-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QUrl</type>
            <name>iconUrl</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>iconUrl-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QIcon</type>
            <name>icon</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>icon-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>bool</type>
            <name>hasSelection</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>hasSelection-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QString</type>
            <name>selectedText</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>selectedText-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QAction *</type>
            <name>pageAction</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>pageAction</anchor>
            <arglist>(QWebEnginePage::WebAction action) const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>triggerPageAction</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>triggerPageAction</anchor>
            <arglist>(QWebEnginePage::WebAction action, bool checked)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>qreal</type>
            <name>zoomFactor</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>zoomFactor-prop</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setZoomFactor</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>zoomFactor-prop</anchor>
            <arglist>(qreal factor)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>findText</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>findText</anchor>
            <arglist>(const QString &amp;subString, QWebEnginePage::FindFlags options, const QWebEngineCallback&lt;bool&gt; &amp;resultCallback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="virtual" static="no">
            <type>virtual QSize</type>
            <name>sizeHint</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>sizeHint</anchor>
            <arglist>() const const override</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>QWebEngineSettings *</type>
            <name>settings</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>settings</anchor>
            <arglist>() const const</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stop</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>stop</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>back</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>back</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>forward</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>forward</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reload</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>reload</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadStarted</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>loadStarted</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadProgress</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>loadProgress</anchor>
            <arglist>(int progress)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadFinished</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>loadFinished</anchor>
            <arglist>(bool ok)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>titleChanged</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>titleChanged</anchor>
            <arglist>(const QString &amp;title)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectionChanged</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>selectionChanged</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>urlChanged</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>urlChanged</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>iconUrlChanged</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>iconUrlChanged</anchor>
            <arglist>(const QUrl &amp;url)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>iconChanged</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>iconChanged</anchor>
            <arglist>(const QIcon &amp;icon)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>renderProcessTerminated</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>renderProcessTerminated</anchor>
            <arglist>(QWebEnginePage::RenderProcessTerminationStatus terminationStatus, int exitCode)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual QWebEngineView *</type>
            <name>createWindow</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>createWindow</anchor>
            <arglist>(QWebEnginePage::WebWindowType type)</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>contextMenuEvent</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>contextMenuEvent</anchor>
            <arglist>(QContextMenuEvent *event) override</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual bool</type>
            <name>event</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>event</anchor>
            <arglist>(QEvent *ev) override</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>showEvent</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>showEvent</anchor>
            <arglist>(QShowEvent *event) override</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>hideEvent</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>hideEvent</anchor>
            <arglist>(QHideEvent *event) override</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>closeEvent</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>closeEvent</anchor>
            <arglist>(QCloseEvent *event) override</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>dragEnterEvent</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>dragEnterEvent</anchor>
            <arglist>(QDragEnterEvent *e) override</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>dragLeaveEvent</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>dragLeaveEvent</anchor>
            <arglist>(QDragLeaveEvent *e) override</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>dragMoveEvent</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>dragMoveEvent</anchor>
            <arglist>(QDragMoveEvent *e) override</arglist>
        </member>
        <member kind="function" protection="protected" virtualness="virtual" static="no">
            <type>virtual void</type>
            <name>dropEvent</name>
            <anchorfile>qwebengineview.html</anchorfile>
            <anchor>dropEvent</anchor>
            <arglist>(QDropEvent *e) override</arglist>
        </member>
    </compound>
    <compound kind="namespace">
        <name>QtWebEngine</name>
        <filename>qtwebengine.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>initialize</name>
            <anchorfile>qtwebengine.html</anchorfile>
            <anchor>initialize</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.QuotaRequest</name>
        <filename>qml-qtwebengine-quotarequest.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>accept</name>
            <anchorfile>qml-qtwebengine-quotarequest.html</anchorfile>
            <anchor>accept-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reject</name>
            <anchorfile>qml-qtwebengine-quotarequest.html</anchorfile>
            <anchor>reject-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.RegisterProtocolHandlerRequest</name>
        <filename>qml-qtwebengine-registerprotocolhandlerrequest.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>accept</name>
            <anchorfile>qml-qtwebengine-registerprotocolhandlerrequest.html</anchorfile>
            <anchor>accept-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reject</name>
            <anchorfile>qml-qtwebengine-registerprotocolhandlerrequest.html</anchorfile>
            <anchor>reject-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.TooltipRequest</name>
        <filename>qml-qtwebengine-tooltiprequest.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngine</name>
        <filename>qml-qtwebengine-webengine.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineAction</name>
        <filename>qml-qtwebengine-webengineaction.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>trigger</name>
            <anchorfile>qml-qtwebengine-webengineaction.html</anchorfile>
            <anchor>trigger-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineCertificateError</name>
        <filename>qml-qtwebengine-webenginecertificateerror.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>defer</name>
            <anchorfile>qml-qtwebengine-webenginecertificateerror.html</anchorfile>
            <anchor>defer-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>ignoreCertificateError</name>
            <anchorfile>qml-qtwebengine-webenginecertificateerror.html</anchorfile>
            <anchor>ignoreCertificateError-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>rejectCertificate</name>
            <anchorfile>qml-qtwebengine-webenginecertificateerror.html</anchorfile>
            <anchor>rejectCertificate-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineClientCertificateOption</name>
        <filename>qml-qtwebengine-webengineclientcertificateoption.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>select</name>
            <anchorfile>qml-qtwebengine-webengineclientcertificateoption.html</anchorfile>
            <anchor>select-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineClientCertificateSelection</name>
        <filename>qml-qtwebengine-webengineclientcertificateselection.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>select</name>
            <anchorfile>qml-qtwebengine-webengineclientcertificateselection.html</anchorfile>
            <anchor>select-method</anchor>
            <arglist>( certificate)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>select</name>
            <anchorfile>qml-qtwebengine-webengineclientcertificateselection.html</anchorfile>
            <anchor>select-method</anchor>
            <arglist>( index)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>selectNone</name>
            <anchorfile>qml-qtwebengine-webengineclientcertificateselection.html</anchorfile>
            <anchor>selectNone-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineDownloadItem</name>
        <filename>qml-qtwebengine-webenginedownloaditem.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>accept</name>
            <anchorfile>qml-qtwebengine-webenginedownloaditem.html</anchorfile>
            <anchor>accept-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>cancel</name>
            <anchorfile>qml-qtwebengine-webenginedownloaditem.html</anchorfile>
            <anchor>cancel-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>pause</name>
            <anchorfile>qml-qtwebengine-webenginedownloaditem.html</anchorfile>
            <anchor>pause-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>resume</name>
            <anchorfile>qml-qtwebengine-webenginedownloaditem.html</anchorfile>
            <anchor>resume-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineHistory</name>
        <filename>qml-qtwebengine-webenginehistory.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clear</name>
            <anchorfile>qml-qtwebengine-webenginehistory.html</anchorfile>
            <anchor>clear-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineHistoryListModel</name>
        <filename>qml-qtwebengine-webenginehistorylistmodel.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineLoadRequest</name>
        <filename>qml-qtwebengine-webengineloadrequest.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineNavigationRequest</name>
        <filename>qml-qtwebengine-webenginenavigationrequest.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineNewViewRequest</name>
        <filename>qml-qtwebengine-webenginenewviewrequest.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>openIn</name>
            <anchorfile>qml-qtwebengine-webenginenewviewrequest.html</anchorfile>
            <anchor>openIn-method</anchor>
            <arglist>( view)</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineNotification</name>
        <filename>qml-qtwebengine-webenginenotification.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>show</name>
            <anchorfile>qml-qtwebengine-webenginenotification.html</anchorfile>
            <anchor>show-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>click</name>
            <anchorfile>qml-qtwebengine-webenginenotification.html</anchorfile>
            <anchor>click-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>close</name>
            <anchorfile>qml-qtwebengine-webenginenotification.html</anchorfile>
            <anchor>close-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>closed</name>
            <anchorfile>qml-qtwebengine-webenginenotification.html</anchorfile>
            <anchor>closed-signal</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineProfile</name>
        <filename>qml-qtwebengine-webengineprofile.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>downloadRequested</name>
            <anchorfile>qml-qtwebengine-webengineprofile.html</anchorfile>
            <anchor>downloadRequested-signal</anchor>
            <arglist>( download)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>downloadFinished</name>
            <anchorfile>qml-qtwebengine-webengineprofile.html</anchorfile>
            <anchor>downloadFinished-signal</anchor>
            <arglist>( download)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>presentNotification</name>
            <anchorfile>qml-qtwebengine-webengineprofile.html</anchorfile>
            <anchor>presentNotification-signal</anchor>
            <arglist>( notification)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>clearHttpCache</name>
            <anchorfile>qml-qtwebengine-webengineprofile.html</anchorfile>
            <anchor>clearHttpCache-method</anchor>
            <arglist>()</arglist>
        </member>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineScript</name>
        <filename>qml-qtwebengine-webenginescript.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineSettings</name>
        <filename>qml-qtwebengine-webenginesettings.html</filename>
    </compound>
    <compound kind="class">
        <name>QtWebEngine.WebEngineView</name>
        <filename>qml-qtwebengine-webengineview.html</filename>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>goBack</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>goBack-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>goForward</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>goForward-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>goBackOrForward</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>goBackOrForward-method</anchor>
            <arglist>( offset)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>stop</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>stop-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reload</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>reload-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>reloadAndBypassCache</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>reloadAndBypassCache-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>loadHtml</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>loadHtml-method</anchor>
            <arglist>( html,  url baseUrl)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>runJavaScript</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>runJavaScript-method</anchor>
            <arglist>( script,  variant callback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>findText</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>findText-method</anchor>
            <arglist>( subString)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>findText</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>findText-method</anchor>
            <arglist>( subString,  FindFlags options)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>findText</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>findText-method</anchor>
            <arglist>( subString,  FindFlags options,  variant resultCallback)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>grantFeaturePermission</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>grantFeaturePermission-method</anchor>
            <arglist>( securityOrigin,  Feature feature,  bool granted)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>fullScreenCancelled</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>fullScreenCancelled-method</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>setActiveFocusOnPress</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>setActiveFocusOnPress-method</anchor>
            <arglist>( arg)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>triggerWebAction</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>triggerWebAction-method</anchor>
            <arglist>( action)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>featurePermissionRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>featurePermissionRequested-signal</anchor>
            <arglist>( securityOrigin,  Feature feature)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>loadingChanged</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>loadingChanged-signal</anchor>
            <arglist>( loadRequest)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>certificateError</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>certificateError-signal</anchor>
            <arglist>( error)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>linkHovered</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>linkHovered-signal</anchor>
            <arglist>( hoveredUrl)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>javaScriptConsoleMessage</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>javaScriptConsoleMessage-signal</anchor>
            <arglist>( level,  string message,  int lineNumber,  string sourceID)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>newViewRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>newViewRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>fullScreenRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>fullScreenRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>activeFocusOnPressChanged</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>activeFocusOnPressChanged-signal</anchor>
            <arglist>( activeFocusOnPress)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>backgroundColorChanged</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>backgroundColorChanged-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>renderProcessTerminated</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>renderProcessTerminated-signal</anchor>
            <arglist>( terminationStatus,  int exitCode)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>windowCloseRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>windowCloseRequested-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>audioMutedChanged</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>audioMutedChanged-signal</anchor>
            <arglist>( muted)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>recentlyAudibleChanged</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>recentlyAudibleChanged-signal</anchor>
            <arglist>( recentlyAudible)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>pdfPrintingFinished</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>pdfPrintingFinished-signal</anchor>
            <arglist>( filePath,  bool success)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>printToPdf</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>printToPdf-method</anchor>
            <arglist>(const string filePath,  PrintedPageSizeId pageSizeId,  PrintedPageOrientation orientation)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>printToPdf</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>printToPdf-method</anchor>
            <arglist>( resultCallback,  PrintedPageSizeId pageSizeId,  PrintedPageOrientation orientation)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>void</type>
            <name>replaceMisspelledWord</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>replaceMisspelledWord-method</anchor>
            <arglist>(const QString &amp;replacement)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>wasRecentlyAudibleChanged</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>wasRecentlyAudibleChanged-signal</anchor>
            <arglist>( wasRecentlyAudible)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>authenticationDialogRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>authenticationDialogRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>javaScriptDialogRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>javaScriptDialogRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>colorDialogRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>colorDialogRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>fileDialogRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>fileDialogRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>formValidationMessageRequested</name>
            <anchorfile>qml-qtwebengine-webengineview-obsolete.html</anchorfile>
            <anchor>formValidationMessageRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>contextMenuRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>contextMenuRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>navigationRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>navigationRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>quotaRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>quotaRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>registerProtocolHandlerRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>registerProtocolHandlerRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>geometryChangeRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>geometryChangeRequested-signal</anchor>
            <arglist>( geometry,  rect frameGeometry)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type>WebEngineAction</type>
            <name>action</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>action-method</anchor>
            <arglist>( action)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>printRequest</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>printRequest-signal</anchor>
            <arglist>()</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>selectClientCertificate</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>selectClientCertificate-signal</anchor>
            <arglist>( clientCertificateSelection)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>tooltipRequested</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>tooltipRequested-signal</anchor>
            <arglist>( request)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>findTextFinished</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>findTextFinished-signal</anchor>
            <arglist>( result)</arglist>
        </member>
        <member kind="function" protection="public" virtualness="non" static="no">
            <type></type>
            <name>renderProcessPidChanged</name>
            <anchorfile>qml-qtwebengine-webengineview.html</anchorfile>
            <anchor>renderProcessPidChanged-signal</anchor>
            <arglist>( pid)</arglist>
        </member>
    </compound>
</tagfile>
